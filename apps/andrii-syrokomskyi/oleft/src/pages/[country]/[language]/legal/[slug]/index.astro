---
import type {
  LegalEntry,
  LegalEntryMetaItem,
  ProfileEntryMetaItem,
} from "../../../../../../bcms/types/ts";
import { bcmsPublic } from "../../../../../bcms-public";
import Layout from "../../../../../layouts/Layout.astro";
import { markdownToHtml, removeTitle } from "../../../../../utils/article";
import {
  getEntrySlugMeta,
  getLanguageCode,
  getSupportedCountries,
  getSupportedLanguages,
} from "../../../../../utils/localization";

export async function getStaticPaths() {
  const countries = getSupportedCountries();
  const languages = getSupportedLanguages();

  const legalDocs = (await bcmsPublic.entry.getAll("legal")) as LegalEntry[];

  const paths = [];
  for (const country of countries) {
    for (const language of languages) {
      const languageCode = getLanguageCode(language);

      for (const legalDoc of legalDocs) {
        const slug =
          legalDoc.meta[languageCode as keyof typeof legalDoc.meta]?.slug ||
          legalDoc.meta.en?.slug ||
          "";
        if (slug) {
          paths.push({
            params: {
              country,
              language,
              slug,
            },
          });
        }
      }
    }
  }

  return paths;
}

const { language, slug } = Astro.params;

const languageCode = getLanguageCode(language);

const profile = await getEntrySlugMeta<ProfileEntryMetaItem>(
  bcmsPublic,
  languageCode,
  "profile",
);

const title = profile.title;

// Get the legal document entry
const legalEntries = (await bcmsPublic.entry.getAll("legal")) as LegalEntry[];
const legalEntry = legalEntries.find((e) => {
  const entrySlug =
    e.meta[languageCode as keyof typeof e.meta]?.slug ?? e.meta.en?.slug;
  return entrySlug === slug;
});

const legalEntryMeta =
  (legalEntry?.meta[
    languageCode as keyof typeof legalEntry.meta
  ] as LegalEntryMetaItem) ?? (legalEntry?.meta.en as LegalEntryMetaItem);

if (!legalEntryMeta) {
  throw new Error(`Legal document with slug "${slug}" not found.`);
}

const legalText = removeTitle(
  legalEntryMeta.text ?? "",
  legalEntryMeta.title ?? "UNDEFINED",
);
---

<Layout
  title={`${legalEntryMeta.title} - ${title}`}
  legalTitle={legalEntryMeta.title}
>
  <!-- Legal Page Container with Enhanced Spacing -->
  <div class="min-h-screen bg-gradient-to-b from-gray-50 to-white article-page">
    <!-- Main Legal Content -->
    <div class="py-12 md:py-20 lg:py-24">
      <div class="container">
        <!-- Legal Header -->
        <header class="text-center mb-12 md:mb-16 lg:mb-20">
          <h1
            class="text-3xl md:text-4xl lg:text-5xl xl:text-6xl font-bold leading-tight tracking-tight text-gray-900 mb-6 max-w-4xl mx-auto"
          >
            {legalEntryMeta.title}
          </h1>
        </header>

        <!-- Legal Content -->
        {
          legalText.length > 0 && (
            <article class="mb-16 md:mb-20 lg:mb-24">
              <div class="max-w-4xl mx-auto">
                <div
                  class="modern-article-content bg-white rounded-2xl shadow-lg p-10 md:p-16 lg:p-20 xl:p-24"
                  set:html={await markdownToHtml(legalText)}
                />
              </div>
            </article>
          )
        }
      </div>
    </div>
  </div>
</Layout>

<style>
  /* Legal page specific styles that complement the modern-article-content global styles */
  .legal-page .modern-article-content {
    /* Enhanced typography for legal documents */
    line-height: 1.8;
    font-size: 1rem;
  }

  .legal-page .modern-article-content h1 {
    @apply text-3xl font-bold text-gray-900 mt-12 mb-8 first:mt-0;
  }

  .legal-page .modern-article-content h2 {
    @apply text-2xl font-semibold text-gray-800 mt-10 mb-6;
  }

  .legal-page .modern-article-content h3 {
    @apply text-xl font-medium text-gray-700 mt-8 mb-4;
  }

  .legal-page .modern-article-content h4 {
    @apply text-lg font-medium text-gray-700 mt-6 mb-3;
  }

  .legal-page .modern-article-content p {
    @apply mb-6 text-gray-600 leading-relaxed;
  }

  .legal-page .modern-article-content ul,
  .legal-page .modern-article-content ol {
    @apply mb-6 pl-8 space-y-2;
  }

  .legal-page .modern-article-content li {
    @apply text-gray-600 leading-relaxed;
  }

  .legal-page .modern-article-content strong {
    @apply font-semibold text-gray-800;
  }

  .legal-page .modern-article-content a {
    @apply text-blue-600 hover:text-blue-700 underline decoration-2 underline-offset-2 transition-colors;
  }

  .legal-page .modern-article-content blockquote {
    @apply border-l-4 border-blue-200 pl-6 py-4 my-8 bg-blue-50 rounded-r-lg italic text-gray-700;
  }

  .legal-page .modern-article-content code {
    @apply bg-gray-100 px-2 py-1 rounded text-sm font-mono text-gray-800;
  }

  .legal-page .modern-article-content pre {
    @apply bg-gray-100 p-4 rounded-lg overflow-x-auto my-6;
  }

  .legal-page .modern-article-content pre code {
    @apply bg-transparent p-0;
  }

  /* Enhanced spacing for legal sections */
  .legal-page .modern-article-content > *:first-child {
    margin-top: 0;
  }

  .legal-page .modern-article-content > *:last-child {
    margin-bottom: 0;
  }
</style>
